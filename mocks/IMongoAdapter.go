// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	options "go.mongodb.org/mongo-driver/mongo/options"
)

// IMongoAdapter is an autogenerated mock type for the IMongoAdapter type
type IMongoAdapter struct {
	mock.Mock
}

// Find provides a mock function with given fields: ctx, result, filter, opts
func (_m *IMongoAdapter) Find(ctx context.Context, result interface{}, filter interface{}, opts ...*options.FindOptions) error {
	_va := make([]interface{}, len(opts))
	for _i := range opts {
		_va[_i] = opts[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, ctx, result, filter)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, interface{}, interface{}, ...*options.FindOptions) error); ok {
		r0 = rf(ctx, result, filter, opts...)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewIMongoAdapter creates a new instance of IMongoAdapter. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewIMongoAdapter(t interface {
	mock.TestingT
	Cleanup(func())
}) *IMongoAdapter {
	mock := &IMongoAdapter{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
